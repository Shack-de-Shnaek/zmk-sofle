#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <300>;       // 300
    delay-ms = <0>;                   // 1
};

&mmv {
    time-to-max-speed-ms = <750>;
    acceleration-exponent = <0.5>;
    trigger-period-ms = <16>;
};


/ {
    combos {
        compatible = "zmk,combos";
        combo_left_square {
            timeout-ms = <25>;
            key-positions = <16 17>;
            bindings = <&kp LEFT_BRACKET>;
            layers = <0>;
        };
        combo_right_square {
            timeout-ms = <25>;
            key-positions = <21 22>;
            bindings = <&kp RIGHT_BRACKET>;
            layers = <0>;
        };

    
        //     timeout-ms = <40>;
        //     key-positions = <30 31>;
        //     bindings = <&kp LEFT_BRACE>;
        //     layers = <0>;
        // };
        // combo_right_squirly {
        //     timeout-ms = <40>;
        //     key-positions = <34 35>;
        //     bindings = <&kp RIGHT_BRACE>;
        //     layers = <0>;
        // };
    };

    behaviors {
        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <100>;
        };

        sh_cap: shit_caps_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings = <&kp LSHIFT>, <&kp LSHIFT>, <&kp CAPS>;
        };

        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
            quick-tap-ms = <150>;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_fancy {
            bindings = <
&kp ESC           &kp N1        &kp N2        &kp N3         &kp N4           &kp N5  &kp UP_ARROW     &kp N6     &kp N7         &kp N8       &kp N9       &kp N0         &kp BACKSPACE
&kp TAB           &kp Q         &kp W         &kp E          &kp R            &kp T   &kp DOWN_ARROW   &kp Y      &kp U          &kp I        &kp O        &kp P          &kp BSLH
&kp LCTRL         &mt LGUI A    &mt LALT S    &mt LCTRL D    &mt LSHIFT F     &kp G   &kp LEFT_ARROW   &kp H      &mt LSHIFT J   &mt LCTRL K  &mt LALT L   &mt LGUI SEMI  &kp APOS
&sh_cap           &kp Z         &kp X         &kp C          &kp V            &kp B   &kp RIGHT_ARROW  &kp N      &kp M          &kp COMMA    &kp DOT      &kp FSLH       &kp ENTER
&kp C_PLAY_PAUSE  &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE      &kp BACKSPACE    &mo 2   &kp ENTER        &mo 3      &kp DELETE     &kp ENTER    &kp SPACE    &kp RSHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE_FANCY";
        };

        base_simple {
            bindings = <
&kp ESC           &kp N1        &kp N2        &kp N3         &kp N4           &kp N5  &kp UP_ARROW     &kp N6     &kp N7         &kp N8      &kp N9        &kp N0      &kp BACKSPACE
&kp TAB           &kp Q         &kp W         &kp E          &kp R            &kp T   &kp DOWN_ARROW   &kp Y      &kp U          &kp I       &kp O         &kp P       &kp BSLH
&kp LCTRL         &kp A         &kp S         &kp D          &kp F            &kp G   &kp LEFT_ARROW   &kp H      &kp J          &kp K       &kp L         &kp SEMI    &kp APOS
&kp LSHIFT        &kp Z         &kp X         &kp C          &kp V            &kp B   &kp RIGHT_ARROW  &kp N      &kp M          &kp COMMA   &kp DOT       &kp FSLH    &kp ENTER
&kp C_PLAY_PAUSE  &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE      &kp BACKSPACE    &mo 2   &kp ENTER        &mo 3      &kp DELETE     &kp ENTER   &kp SPACE     &kp RSHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE_SIMPLE";
        };

        function {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8       &kp F9     &kp F10           &trans
&trans      &trans           &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp HOME         &kp PAGE_DOWN    &kp PAGE_UP  &kp END   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &kp C_AC_CUT    &kp C_AC_COPY    &kp C_AC_PASTE   &mkp MB5           &mmv MOVE_LEFT   &kp LEFT         &kp DOWN         &kp UP       &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT   &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans       &trans     &trans
            >;

            display-name = "FUNCTION";
            sensor-bindings = <&scroll_encoder>;
        };

        system {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &to 0           &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &to 1           &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            display-name = "SYSTEM";
            sensor-bindings = <&scroll_encoder>;
        };

        extra1 {
            status = "reserved";
        };

        extra2 {
            status = "reserved";
        };

        extra3 {
            status = "reserved";
        };
    };
};
